[buildout]
develop = .
prod-parts = zodb test extra-eggs mercury
parts =  ${buildout:prod-parts} primary secondary
find-links = http://download.zope.org/distribution/
             http://yum.zope.com/buildout/
             sftp://${yum.zope.com:user}@yum.zope.com/private
index = http://download.zope.org/ppix
extensions = zc.buildoutsftp
extends = versions.cfg

[zodb]
recipe = zc.recipe.egg:script
eggs = ZODB3 
       zc.zrs
       zc.queue
       zope.app.keyreference
       zope.minmax
       zc.FileStorage
initialization = import zc.FileStorage
interpreter = py

[test]
recipe = zc.recipe.testrunner
eggs = zc.zrs
       zc.FileStorage
initialization = 
  import zc.FileStorage
  import ZODB.tests.VersionStorage, ZODB.tests.TransactionalUndoVersionStorage
  class C: pass
  ZODB.tests.VersionStorage.VersionStorage = C
  class C: pass
  ZODB.tests.TransactionalUndoVersionStorage.TransactionalUndoVersionStorage = C
  import ZODB.tests.testDB
  del ZODB.tests.testDB.DBTests.test_removeVersionPool
  del ZODB.tests.testDB.DBTests.test_removeVersionPool_while_connection_open
  import ZODB.tests.testZODB
  del ZODB.tests.testZODB.ZODBTests.checkVersionOnly

[primary-data]
recipe = zc.recipe.filestorage

[primary]
recipe = zc.zodbrecipes:server
zeo.conf =
   <zeo>
      address 8100
   </zeo>
   %import zc.zrs
   <primary 1>
     address 8102
     <filestorage>
        path ${primary-data:path}
     </filestorage>
   </primary>

[secondary-data]
recipe = zc.recipe.filestorage

[secondary]
recipe = zc.zodbrecipes:server
zeo.conf =
   <zeo>
      address 8100
   </zeo>
   %import zc.zrs
   <secondary 1>
     address 8102
     <filestorage>
        path ${secondary-data:path}
     </filestorage>
   </secondary>

[extra-eggs]
recipe = zc.recipe.egg:eggs
eggs =
   zc.zodbrecipes
   zc.recipe.rhrc
   zc.recipe.deployment

[mercury]
recipe = buildoutmercury
name = zrs
