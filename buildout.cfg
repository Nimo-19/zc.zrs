[buildout]
develop = .
prod-parts = zodb zeopack zdaemon test extra-eggs mercury
parts =  ${buildout:prod-parts} primary secondary 
      secondary-primary secondary-secondary monitor
find-links = http://download.zope.org/distribution/
             http://yum.zope.com/buildout/
             sftp://yum.zope.com/private
index = http://download.zope.org/simple
extensions = zc.buildoutsftp
extends = versions.cfg
unzip = true

[zodb]
recipe = zc.recipe.egg:script
eggs = ZODB3 
       zc.zrs
       zc.queue
       zope.app.keyreference
       zope.minmax
       zc.FileStorage
       zc.catalogqueue
       zc.beforestorage
       zc.demostorage2
       zc.nagiosloghandler
initialization = import zc.FileStorage
interpreter = py

# Override the regular ZEO pack with one that sets up logging
[zeopack]
recipe = zc.recipe.egg:script
eggs = ZODB3 
       zc.FileStorage
initialization =
   import logging
   logging.getLogger().addHandler(logging.StreamHandler())
   logging.getLogger().setLevel(logging.WARNING)
   import zc.FileStorage
scripts = zeopack


[zdaemon]
recipe = zc.recipe.egg:script
eggs = zdaemon

[test]
recipe = zc.recipe.testrunner
eggs = zc.zrs
       zc.FileStorage
       zc.beforestorage
       zc.demostorage2
initialization = 
  import zc.FileStorage
  import ZODB.tests.VersionStorage, ZODB.tests.TransactionalUndoVersionStorage
  class C: pass
  ZODB.tests.VersionStorage.VersionStorage = C
  class C: pass
  ZODB.tests.TransactionalUndoVersionStorage.TransactionalUndoVersionStorage = C
  import ZODB.tests.testDB
  del ZODB.tests.testDB.DBTests.test_removeVersionPool
  del ZODB.tests.testDB.DBTests.test_removeVersionPool_while_connection_open
  import ZODB.tests.testZODB
  del ZODB.tests.testZODB.ZODBTests.checkVersionOnly

[primary-data]
recipe = zc.recipe.filestorage

[primary]
recipe = zc.zodbrecipes:server
zeo.conf =
   <zeo>
      address 8100
   </zeo>
   %import zc.zrs
   <primary 1>
     address 8102
     <filestorage>
        path ${primary-data:path}
     </filestorage>
   </primary>

[secondary-data]
recipe = zc.recipe.filestorage

[secondary]
recipe = zc.zodbrecipes:server
zeo.conf =
   <zeo>
      address 8200
   </zeo>
   %import zc.zrs
   <secondary 1>
     address localhost:8102
     <filestorage>
        path ${secondary-data:path}
     </filestorage>
   </secondary>

[secondary-primary-data]
recipe = zc.recipe.filestorage

[secondary-primary]
recipe = zc.zodbrecipes:server
zeo.conf =
   <zeo>
      address 8300
   </zeo>
   %import zc.zrs
   <secondary 1>
     address localhost:8102
     <primary 1>
       address 8302
       <filestorage>
          path ${secondary-primary-data:path}
       </filestorage>
     </primary>
   </secondary>

[secondary-secondary-data]
recipe = zc.recipe.filestorage

[secondary-secondary]
recipe = zc.zodbrecipes:server
zeo.conf =
   <zeo>
      address 8400
   </zeo>
   %import zc.zrs
   <secondary 1>
     address localhost:8302
     check_checksums true
     <filestorage>
        path ${secondary-secondary-data:path}
     </filestorage>
   </secondary>

[monitor-config]
recipe = zc.recipe.deployment:configuration
text =
    [monitor]
    clusters = sample
    frequency = 1
    
    [sample]
    primary = localhost:8100
    secondaries = localhost:8200
    
    [loggers]
    keys=root,monitor
    
    [handlers]
    keys = root,monitor
    
    [formatters]
    keys = root,monitor
    
    [logger_root]
    handlers=root
    level=CRITICAL
    
    [handler_root]
    class=StreamHandler
    args=()
    formatter=root
    
    [formatter_root]
    format=ROOT %(name)s %(levelname)s %(message)s

    [logger_monitor]
    handlers=monitor
    level=INFO
    qualname=monitor
    
    [handler_monitor]
    class=StreamHandler
    args=()
    formatter=monitor
    
    [formatter_monitor]
    format=EVENT:\t%(asctime)s\t%(name)s\t%(levelname)s\t%(message)s
    

[monitor]
recipe = zc.zdaemonrecipe
program = ${buildout:bin-directory}/zrsmonitor-script ${monitor-config:location}


[extra-eggs]
recipe = zc.recipe.egg:eggs
eggs =
   zc.zodbrecipes
   zc.recipe.rhrc
   zc.recipe.deployment
   zc.zdaemonrecipe

[mercury]
recipe = buildoutmercury
name = zrs
